buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'application'
}

apply plugin: 'application'
apply plugin: 'eclipse'

repositories {
    mavenCentral()
}

apply from: 'bomVersions.gradle'

ext {
    log4j = [
        // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
        "org.apache.logging.log4j:log4j-core:${log4jVersion}",
        // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
        "org.apache.logging.log4j:log4j-api:${log4jVersion}",
        // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-jul
        "org.apache.logging.log4j:log4j-jul:${log4jVersion}",
        // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j18-impl
        "org.apache.logging.log4j:log4j-slf4j18-impl:${log4jVersion}"
        ]        
        
    jetty = [
        // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-server
        "org.eclipse.jetty:jetty-server:${jettyVersion}",
        // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-servlet
        "org.eclipse.jetty:jetty-servlet:${jettyVersion}",
        // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-servlets
        "org.eclipse.jetty:jetty-servlets:${jettyVersion}",
        // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-security
        "org.eclipse.jetty:jetty-security:${jettyVersion}",
        // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-webapp
        "org.eclipse.jetty:jetty-webapp:${jettyVersion}",
        // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-rewrite
        "org.eclipse.jetty:jetty-rewrite:${jettyVersion}",
        // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-util
        "org.eclipse.jetty:jetty-util:${jettyVersion}",
        // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-alpn-java-server
        "org.eclipse.jetty:jetty-alpn-java-server:${jettyVersion}",
        // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-alpn-java-client
        "org.eclipse.jetty:jetty-alpn-java-client:${jettyVersion}",
        // https://mvnrepository.com/artifact/org.eclipse.jetty.http2/http2-common
        "org.eclipse.jetty.http2:http2-common:${jettyVersion}",
        // https://mvnrepository.com/artifact/org.eclipse.jetty.http2/http2-hpack
        "org.eclipse.jetty.http2:http2-hpack:${jettyVersion}",
        // https://mvnrepository.com/artifact/org.eclipse.jetty.http2/http2-server
        "org.eclipse.jetty.http2:http2-server:${jettyVersion}",
        // https://mvnrepository.com/artifact/org.eclipse.jetty.http2/http2-client
        "org.eclipse.jetty.http2:http2-client:${jettyVersion}",
        // https://mvnrepository.com/artifact/org.eclipse.jetty.http2/http2-http-client-transport
        "org.eclipse.jetty.http2:http2-http-client-transport:${jettyVersion}",

        // https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
        "javax.annotation:javax.annotation-api:1.3.2",
        // https://mvnrepository.com/artifact/javax.validation/validation-api
        "javax.validation:validation-api:2.0.1.Final"
        ]
    
    jersey = [
        // https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-server
        "org.glassfish.jersey.core:jersey-server:${jerseyVersion}",
        // https://mvnrepository.com/artifact/org.glassfish.jersey.containers/jersey-container-servlet
        "org.glassfish.jersey.containers:jersey-container-servlet:${jerseyVersion}",
        // https://mvnrepository.com/artifact/org.glassfish.jersey.inject/jersey-hk2
        "org.glassfish.jersey.inject:jersey-hk2:${jerseyVersion}",
        // https://mvnrepository.com/artifact/org.glassfish.jersey.media/jersey-media-json-jackson
        "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}",
        // https://mvnrepository.com/artifact/org.glassfish.jersey.media/jersey-media-sse
        "org.glassfish.jersey.media:jersey-media-sse:${jerseyVersion}",
        // https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-client
        "org.glassfish.jersey.core:jersey-client:${jerseyVersion}"
        ]
    
    jackson = [
        // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
        "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}",
        // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
        "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
        // https://mvnrepository.com/artifact/com.fasterxml.jackson.jaxrs/jackson-jaxrs-json-provider
        "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${jacksonVersion}"
        ]

    postgresqlJava = [
        // https://mvnrepository.com/artifact/org.postgresql/postgresql
        "org.postgresql:postgresql:${postgresqlJavaVersion}"
        ]        
}

dependencies {
    implementation log4j, jetty, jersey, jackson, postgresqlJava
}


clean.dependsOn(cleanEclipse)

tasks.eclipse.dependsOn(cleanEclipse)

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

mainClassName = 'maze.MazeMain'
